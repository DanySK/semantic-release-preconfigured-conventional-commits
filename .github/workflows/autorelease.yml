name: Test and create a release
on:
  push:
    branches-ignore:
      - 'renovate/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'LICENSE'
  workflow_dispatch:

jobs:
  tests:
    outputs:
      node-version: ${{ steps.node-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.3.0
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.5
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Run tests
        env:
          # semantic-release picks up the external repo branch no matter what
          BRANCH: ${{ steps.branch-name.outputs.current_branch }}
        run: |
          ./expect.sh 'any!' 'major'
          ./expect.sh 'any(scope)!' 'major'
          ./expect.sh 'feat' 'minor'
          ./expect.sh 'chore(api-deps)' 'minor'
          ./expect.sh 'chore(core-deps)' 'patch'
          ./expect.sh 'fix' 'patch'
          ./expect.sh 'docs' 'patch'
          ./expect.sh 'perf' 'patch'
          ./expect.sh 'revert' 'patch'
          ./expect.sh 'test' 'no'
          ./expect.sh 'ci' 'no'
          ./expect.sh 'build' 'no'
          ./expect.sh 'chore' 'no'
          ./expect.sh 'chore(deps)' 'no'
          ./expect.sh 'style' 'no'
          ./expect.sh 'refactor' 'no'
  release:
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4.3.0
      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ needs.tests.outputs.node-version }}
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Install
        run: npm install
      - name: Prepare the configuration
        uses: mikefarah/yq@v4.47.1
        with:
          cmd: >-
            sed -n '/### CUT ###*/q;p' .releaserc.yml | yq -o j -e eval > .releaserc.json.pre
      - name: Check the existence of the generated configuration
        run: |
          [ -s .releaserc.json.pre ] && jq -e < .releaserc.json.pre
      - name: Semantic Release
        if: >-
          github.event_name == 'push'
          && github.repository == 'DanySK/semantic-release-preconfigured-conventional-commits'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Debug
        if: failure()
        run: |
          cat .releaserc.json
          cat ~/.npm/_logs/*
